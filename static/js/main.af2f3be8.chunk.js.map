{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","day","EarlyHour","LateHour","timeFilter","setTimeFilter","sessionFilter","setSessionFilter","name","tag","langFilter","setLangFilter","trackFilter","setTrackFilter","agenda","data","sessions","color","session","tags","sessionSettings","className","splitTags","split","returnSess","forEach","sess","trim","updateSessionFilter","event","target","value","checked","newFilter","filter","push","length","updateTrackFilter","googleCalLink","item","start","Date","schedulingData","timestamp","toISOString","replace","end","encodeURI","description","id","onChange","e","type","map","lang","all","allSessions","track","allTracks","agendaItem","sessName","sessionName","getDate","parseInt","getHours","found","hiddenTags","getMonth","getMinutes","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2f3be8.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nimport data from './data/full.json'\n\ntype AgendaItem = {\n    id: string\n    name: string\n    description: string\n    type: string\n    updatedAt: number\n    tags: string\n    schedulingData: {\n        start: {\n            timestamp: number\n            timeZoneName: string\n            timeZoneOffset: number\n        }\n        end: {\n            timestamp: number\n            timeZoneName: string\n            timeZoneOffset: number\n        }\n    }\n    presenters: string[]\n    hiddenTags: string\n}\n\ntype sessionColor = {\n    name: string\n    color: string\n}\n\ntype langTags = {\n    name: string\n    tag: string\n}\n\nfunction App() {\n\n    const [timeFilter, setTimeFilter] = useState({day: \"All\", EarlyHour: \"00\", LateHour: \"23\"})\n    const [sessionFilter, setSessionFilter] = useState([\"All\"])\n    const [langFilter, setLangFilter] = useState<langTags>({name: \"All\", tag: \"\"})\n    const [trackFilter, setTrackFilter] = useState([\"All\"])\n\n    const rawAgenda = data as any\n    let agenda = rawAgenda as AgendaItem[];\n\n    const langs: langTags[] = [\n        {name: \"Korean\",  tag:\"__korean\"},\n        {name: \"Portuguese\",  tag:\"__portuguese\"},\n        {name: \"English\",  tag:\"english\"},\n        {name: \"Chinese\",  tag:\"__chinese\"},\n        {name: \"Italian\",  tag:\"__italian\"},\n        {name: \"French\",  tag:\"__french\"},\n        {name: \"Japanese\",  tag:\"__japanese\"}\n    ]\n\n    const sessions: sessionColor[] = [\n        {name: \"Demo\", color: \"bg-grey-400\"},\n        {name: \"Dev Chat\", color: \"bg-red-200\"},\n        {name: \"Executive Summit\", color: \"bg-yellow-200\"},\n        {name: \"Hands-on Content\", color: \"bg-green-200\"},\n        {name: \"Keynote\", color: \"bg-blue-300\"},\n        {name: \"Leadership Session\", color: \"bg-indigo-300\"},\n        {name: \"Lightning Talk\", color: \"bg-purple-300\"},\n        {name: \"Play\", color: \"bg-pink-300\"},\n        {name: \"Session\", color: \"bg-red-400\"},\n        {name: \"Training and Certification\", color: \"bg-green-400\"},\n        {name: \"Video on Demand\", color: \"bg-yellow-400\"},\n    ]\n\n    const tracks = [\"Advertising & Marketing\", \"Alexa\", \"Amazon.com\", \"Analytics\", \"Application Integration\", \"Architecture\", \"Artificial Intelligence & Machine Learning\", \"Automotive\", \"Blockchain\", \"Builders' Library\", \"Business Apps (including Connect)\", \"Business Intelligence\", \"Chinese\", \"Community\", \"Compute\", \"Consumer Packaged Goods\", \"Containers\", \"Databases\", \"DeepRacer\", \"DevOps\", \"End User Computing\", \"Energy\", \"Enterprise Migration\", \"Financial Services\", \"French\", \"Front-End Web & Mobile Development\", \"Games GameTech\", \"Global Partner Summit (GPS)\", \"Healthcare\",\"Innovation\",\"IoT\",\"Italian\",\"Japanese\",\"Korean\",\"Life Sciences\",\"Management Tools & Governance\",\"Manufacturing\",\"Marketplace\",\"Media & Entertainment\",\"Netflix\",\"Networking & Content Delivery\",\"Open Source\",\"Partner Solutions for Business\",\"Portuguese\",\"Power & Utilities\",\"Public Sector\",\"Quantum Computing\",\"Retail\",\"Robotics\",\"Security Compliance and Identity\",\"Serverless\",\"Spanish\",\"Startup\",\"Storage\",\"Telecommunications\",\"Travel & Hospitality\",\"We Power Tech\",\"Windows\",\".NET\"]\n\n    const session = (tags: string) => {\n        const {name, color} = sessionSettings(tags)\n        return <div className={`md:w-1/4 lg:w-1/5 w-full p-2 md:mr-2 ${color} justify-center flex flex-col`}>\n            {name}\n        </div>\n    }\n\n    const sessionSettings = (tags: string): sessionColor => {\n        const splitTags = tags.split(',')\n        let returnSess: sessionColor = {name: \"\", color: \"bg-white\"}\n        splitTags.forEach((tag) => {\n            sessions.forEach((sess) => {\n                if (tag.trim() === sess.name.trim()) {\n                    returnSess = sess\n                }\n            })\n        })\n\n        return returnSess\n    }\n\n    const sessionName = (tags: string): string => {\n        let sessName = \"\"\n        const splitTags = tags.split(',')\n        splitTags.forEach((tag) => {\n            sessions.forEach((sess) => {\n                if (tag.trim() === sess.name.trim()) {\n                    sessName = sess.name\n                }\n            })\n        })\n        return sessName\n    }\n\n    const allSessions = (): boolean =>{\n        let all = false\n        sessionFilter.forEach((session) => {\n            if (session === \"All\") {\n                all = true\n            }\n        })\n        return all\n    }\n\n    const allTracks = (): boolean =>{\n        let all = false\n        trackFilter.forEach((track) => {\n            if (track === \"All\") {\n                all = true\n            }\n        })\n        return all\n    }\n\n    const updateSessionFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.value === \"All\" && event.target.checked) {\n            setSessionFilter([\"All\"])\n            return\n        }\n        if (event.target.checked) {\n            let newFilter: string[] = []\n            sessionFilter.forEach((filter) => {\n                if (filter !== \"All\") {\n                    newFilter.push(filter)\n                    newFilter.push(filter)\n                }\n            })\n            newFilter.push(event.target.value)\n            setSessionFilter(newFilter)\n        } else {\n            let newFilter: string[] = []\n            sessionFilter.forEach((filter) => {\n                if (filter !== event.target.value) {\n                    newFilter.push(filter)\n                }\n            })\n            if (newFilter.length === 0) {\n                newFilter.push(\"All\")\n            }\n            setSessionFilter(newFilter)\n        }\n    }\n\n    const updateTrackFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.value === \"All\" && event.target.checked) {\n            setTrackFilter([\"All\"])\n            return\n        }\n        if (event.target.checked) {\n            let newFilter: string[] = []\n            trackFilter.forEach((filter) => {\n                if (filter !== \"All\") {\n                    newFilter.push(filter)\n                    newFilter.push(filter)\n                }\n            })\n            newFilter.push(event.target.value)\n            setTrackFilter(newFilter)\n        } else {\n            let newFilter: string[] = []\n            trackFilter.forEach((filter) => {\n                if (filter !== event.target.value) {\n                    newFilter.push(filter)\n                }\n            })\n            if (newFilter.length === 0) {\n                newFilter.push(\"All\")\n            }\n            setTrackFilter(newFilter)\n        }\n    }\n\n    const googleCalLink = (item: AgendaItem): string => {\n        const start = new Date(item.schedulingData.start.timestamp * 1000).toISOString().replace(/-|:|\\.\\d\\d\\d/g,\"\")\n        const end = new Date(item.schedulingData.end.timestamp * 1000).toISOString().replace(/-|:|\\.\\d\\d\\d/g,\"\")\n        return `https://calendar.google.com/calendar/u/0/r/eventedit?text=${encodeURI(item.name)}&dates=${start}/${end}&details=${encodeURI(item.description)}&location=https://virtual.awsevents.com/media/${encodeURI(item.id)}`\n    }\n\n    return (\n    <div className=\"App\">\n      <header className=\"flex bg-green-800 p-4 shadow-lg mt-auto text-white\">\n        <div className=\"text-2xl\">ReInvent 2020</div>\n        <div className=\"text-xl ml-4 mt-1\">Agenda Filter</div>\n      </header>\n      <main className=\"m-4 my-8 flex flex-col md:flex-row\">\n          <div className=\"flex flex-wrap md:flex-col md:w-1/4\">\n\n              {/*Date and Time Filter*/}\n              <div className=\"flex flex-wrap md:flex-col mt-4\">\n                  <label className=\"mr-2\">Start Day:</label>\n                  <div>\n                      <select value = {timeFilter.day} onChange={(e) => setTimeFilter({...timeFilter, day: e.target.value})} className=\"w-4/5, border-2 border-green-800\">\n                      <option value=\"All\">All</option>\n                      <option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"8\">8</option><option value=\"9\">9</option><option value=\"10\">10</option><option value=\"11\">11</option><option value=\"15\">15</option><option value=\"16\">16</option><option value=\"17\">17</option><option value=\"18\">18</option>\n                  </select> December\n                  </div>\n                  <label className=\"mr-2\">Earliest Start Hour (GMT):</label>\n                  <div>\n                      <select value={timeFilter.EarlyHour} onChange={(e) => setTimeFilter({...timeFilter, EarlyHour: e.target.value, LateHour: timeFilter.LateHour < e.target.value ? e.target.value : timeFilter.LateHour})} className=\"w-4/5, border-2 border-green-800\">\n                      <option value=\"00\">00</option><option value=\"01\">01</option><option value=\"02\">02</option><option value=\"03\">03</option><option value=\"04\">04</option><option value=\"05\">05</option><option value=\"06\">06</option><option value=\"07\">07</option><option value=\"08\">08</option><option value=\"09\">09</option><option value=\"10\">10</option><option value=\"11\">11</option><option value=\"12\">12</option><option value=\"13\">13</option><option value=\"14\">14</option><option value=\"15\">15</option><option value=\"16\">16</option><option value=\"17\">17</option><option value=\"18\">18</option><option value=\"19\">19</option><option value=\"19\">19</option><option value=\"20\">20</option><option value=\"21\">21</option><option value=\"22\">22</option><option value=\"23\">23</option>\n                    </select>\n                  </div>\n                  <label className=\"mr-2\">Latest Start Hour (GMT):</label>\n                  <div>\n                      <select value={timeFilter.LateHour} onChange={(e) => setTimeFilter({...timeFilter, LateHour: e.target.value, EarlyHour: timeFilter.EarlyHour > e.target.value ? e.target.value : timeFilter.EarlyHour})} className=\"w-4/5, border-2 border-green-800\">\n                      <option value=\"00\">00</option><option value=\"01\">01</option><option value=\"02\">02</option><option value=\"03\">03</option><option value=\"04\">04</option><option value=\"05\">05</option><option value=\"06\">06</option><option value=\"07\">07</option><option value=\"08\">08</option><option value=\"09\">09</option><option value=\"10\">10</option><option value=\"11\">11</option><option value=\"12\">12</option><option value=\"13\">13</option><option value=\"14\">14</option><option value=\"15\">15</option><option value=\"16\">16</option><option value=\"17\">17</option><option value=\"18\">18</option><option value=\"19\">19</option><option value=\"19\">19</option><option value=\"20\">20</option><option value=\"21\">21</option><option value=\"22\">22</option><option value=\"23\">23</option>\n                    </select>\n                  </div>\n\n              </div>\n              {/*Language filter*/}\n              <div className=\"flex flex-wrap md:flex-col mt-4\">\n                  <label className=\"mr-2\">Languages:</label>\n                  <div className=\"mb-2 mr-2\">\n                      <div><input onChange={(e) => {setLangFilter({name: \"All\", tag: \"\"})}} checked={langFilter.name === \"All\"} type=\"radio\" id=\"All\" value=\"All\" className=\"mr-2\"/><label>All</label></div>\n                  </div>\n                  {langs.map((lang) => {\n\n                      return <div key={lang.tag} className=\"mb-2 mr-2\">\n                          <input onChange={(e) => {setLangFilter(lang)}} checked={langFilter.name === lang.name} type=\"radio\" id={lang.tag} value={lang.tag} className=\"mr-2\"/>\n                          <label>{lang.name}</label>\n                      </div>\n                  })}\n              </div>\n\n              {/*Session Filter*/}\n              <div className=\"flex flex-wrap md:flex-col mt-4\">\n                  <label className=\"mr-2\">Session Types:</label>\n                  <div className=\"mb-2 mr-2\">\n                      <div><input onChange={updateSessionFilter} checked={allSessions()} type=\"checkbox\" id=\"All\" value=\"All\" className=\"mr-2\"/><label>All</label></div>\n                  </div>\n                  {sessions.map((sess) => {\n                      let checked = false\n                      let all = false\n                      sessionFilter.forEach((filter) => {\n                          if (filter === \"All\") {\n                              all = true\n                          }\n                          if (filter === sess.name) {\n                              checked = true\n                          }\n                          if (all) {\n                              checked = false\n                          }\n                      })\n                      return <div key={sess.name} className=\"mb-2 mr-2\">\n                          <input onChange={updateSessionFilter} checked={checked} type=\"checkbox\" id={sess.name} value={sess.name} className=\"mr-2\"/>\n                          <label className={`${sess.color} p-1 shadow rounded`}>{sess.name}</label>\n                      </div>\n                  })}\n              </div>\n\n              {/*Track Filter*/}\n              <div className=\"flex flex-wrap md:flex-col mt-4\">\n                  <label className=\"mr-2\">Tracks:</label>\n                  <div className=\"mb-2 mr-2\">\n                      <div><input onChange={updateTrackFilter} checked={allTracks()} type=\"checkbox\" id=\"All\" value=\"All\" className=\"mr-2\"/><label>All</label></div>\n                  </div>\n                  {tracks.map((track) => {\n                      let checked = false\n                      let all = false\n                      trackFilter.forEach((filter) => {\n                          if (filter === \"All\") {\n                              all = true\n                          }\n                          if (filter === track) {\n                              checked = true\n                          }\n                          if (all) {\n                              checked = false\n                          }\n                      })\n                      return <div key={track} className=\"mb-2 mr-2\">\n                          <input onChange={updateTrackFilter} checked={checked} type=\"checkbox\" id={track} value={track} className=\"mr-2\"/>\n                          <label>{track}</label>\n                      </div>\n                  })}\n              </div>\n          </div>\n\n          <div className=\"md:w-3/4\">\n              {agenda.map((agendaItem) => {\n                  const start = new Date(agendaItem.schedulingData.start.timestamp * 1000)\n                  const end = new Date(agendaItem.schedulingData.end.timestamp * 1000)\n\n                  const sessName = sessionName(agendaItem.tags)\n\n                  let tags: string[] = []\n                  const splitTags = agendaItem.tags.split(\",\")\n                  splitTags.forEach((tag) => {\n                      if (tag.trim() !== sessName) {\n                          tags.push(tag)\n                      }\n                  })\n\n                  if (timeFilter.day !== \"All\" && timeFilter.day !== `${start.getDate()}`) {\n                      return  <div/>\n                  }\n\n                  if (parseInt(timeFilter.EarlyHour) > start.getHours() || parseInt(timeFilter.LateHour) < start.getHours()) {\n                      return  <div/>\n                  }\n\n                  if (langFilter.name !== \"All\") {\n                      let found = false\n                      const hiddenTags = agendaItem.hiddenTags.split(\",\")\n                      hiddenTags.forEach((tag) => {\n                          if (tag.trim() === langFilter.tag) {\n                              found = true\n                          }\n                      })\n                      if (!found) {\n                         return <div/>\n                      }\n                  }\n\n                  let found = false\n                  sessionFilter.forEach((filter) => {\n                      if (filter === sessName || filter === \"All\") {\n                          found = true\n                      }\n                  })\n                  if (!found) {\n                      return <div/>\n                  }\n\n                  found = false\n                  trackFilter.forEach((filter) => {\n                      if (filter === \"All\") {\n                          found = true\n                      } else {\n                          tags.forEach((tag) => {\n                              if (filter === tag) {\n                                  found = true\n                              }\n                          })\n                      }\n                  })\n                  if (!found) {\n                      return <div/>\n                  }\n\n\n                  return (\n                      <div key={agendaItem.id} className=\"flex border-green-800 border-2 my-2 shadow-lg flex-col md:flex-row\">\n                          {session(agendaItem.tags)}\n                          <div className=\"md:w-3/4 lg:w-4/5 md:w-full p-2 my-2 mr-2\">\n                              <h3 className=\"text-l font-semibold\">{agendaItem.name}</h3>\n                              <div className=\"flex flex-wrap\">\n                                  {tags.map((tag) => {\n                                      return <div key={tag} className=\"bg-green-200 border-2 border-green-600 p-1 px-2 rounded-xl shadow-lg mr-1\">{tag}</div>\n                                  })}\n                              </div>\n                              <span>{start.getDate()}/{start.getMonth() + 1} {start.getHours() < 10 ? '0' : ''}{start.getHours()}:{start.getMinutes() < 10 ? '0' : ''}{start.getMinutes()} - {end.getHours() < 10 ? '0' : ''}{end.getHours()}:{end.getMinutes() < 10 ? '0' : ''}{end.getMinutes()} GMT</span>\n                              <p>\n                                  {agendaItem.description.replace(/<.*>/g, \"\")}\n                              </p>\n                              <div className=\"flex flex-wrap\">\n                                  <div className=\"bg-blue-300 border-2 border-blue-600 p-1 px-2 rounded-xl shadow-lg mr-1\">\n                                      <a href={googleCalLink(agendaItem)} rel=\"noreferrer\" target=\"_blank\">Add to Google Calendar</a>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  )\n              })}\n          </div>\n\n      </main>\n      <footer>\n\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}